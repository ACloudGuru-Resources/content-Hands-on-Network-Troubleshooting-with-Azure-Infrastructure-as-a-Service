{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.9.1.41621",
      "templateHash": "16796613920857519774"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2019-11-01",
      "name": "vnet1",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "jump-subnet",
            "properties": {
              "addressPrefix": "10.0.0.0/24",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-jump-subnet')]"
              }
            }
          },
          {
            "name": "web-subnet",
            "properties": {
              "addressPrefix": "10.0.1.0/24",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-web-subnet')]"
              }
            }
          },
          {
            "name": "asg-subnet",
            "properties": {
              "addressPrefix": "10.0.2.0/24"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-jump-subnet')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-web-subnet')]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-11-01",
      "name": "nsg-web-subnet",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "Allow web traffic to web subnet",
            "properties": {
              "description": "Allow web traffic to web subnet",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "Deny all traffic to web subnet",
            "properties": {
              "description": "Deny all traffic to web subnet",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "10.0.1.0/24",
              "access": "Deny",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-11-01",
      "name": "nsg-jump-subnet",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "Allow inbound RDP jumpbox subnet",
            "properties": {
              "description": "Allow RDP jumpbox subnet",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "10.0.0.0/24",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          },
          {
            "name": "Allow outbound HTTP from jumpbox subnet to web subnet",
            "properties": {
              "description": "Allow outbound HTTP from jumpbox subnet to web subnet",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "10.0.0.0/24",
              "destinationAddressPrefix": "10.0.1.0/24",
              "access": "Allow",
              "priority": 100,
              "direction": "Outbound"
            }
          },
          {
            "name": "Deny outbound to vnet1 from jumpbox subnet",
            "properties": {
              "description": "Deny outbound to vnet1 from jumpbox subnet",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "10.0.0.0/24",
              "destinationAddressPrefix": "10.0.0.0/16",
              "access": "Deny",
              "priority": 200,
              "direction": "Outbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2019-11-01",
      "name": "jumpbox1pip1",
      "sku": {
        "name": "Standard"
      },
      "location": "[parameters('location')]",
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "jumpbox1nic1",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "jumpbox1nic1ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "10.0.0.5",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'jumpbox1pip1')]"
              },
              "subnet": {
                "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', 'vnet1')).subnets[0].id]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-jumpbox1nic1')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', 'jumpbox1pip1')]",
        "[resourceId('Microsoft.Network/networkSecurityGroups', 'nsg-jumpbox1nic1')]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'vnet1')]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2019-11-01",
      "name": "nsg-jumpbox1nic1",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "AllowRDP",
            "properties": {
              "description": "Allow Remote Desktop to jumpbox1",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3389",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "10.0.0.5",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-12-01",
      "name": "jumpbox1",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_B2s"
        },
        "osProfile": {
          "computerName": "jumpbox1"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2022-datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "jumpbox1osdisk",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'jumpbox1nic1')]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": false
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', 'jumpbox1nic1')]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}/{1}', 'jumpbox1', 'jumpbox1-cse')]",
      "location": "[parameters('location')]",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.10",
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "fileUris": [
            "https://raw.githubusercontent.com/ACloudGuru-Resources/content-Hands-on-Network-Troubleshooting-with-Azure-Infrastructure-as-a-Service/master/Lab%2002%20-%20Troubleshooting%20Application%20Security%20Groups/Initialize-JumpBox1.ps1"
          ],
          "commandToExecute": "powershell.exe -ExecutionPolicy Bypass -File Initialize-JumpBox1.ps1"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', 'jumpbox1')]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2020-11-01",
      "name": "webserver1nic1",
      "location": "[parameters('location')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "webserver1nic1ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "10.0.1.80",
              "subnet": {
                "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', 'vnet1')).subnets[1].id]"
              },
              "applicationGatewayBackendAddressPools": [
                "[reference(resourceId('Microsoft.Network/applicationGateways', 'appgw1')).backendAddressPools[0]]"
              ]
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/applicationGateways', 'appgw1')]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'vnet1')]"
      ]
    },
    {
      "copy": {
        "name": "webserver",
        "count": "[length(range(1, 2))]"
      },
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2020-12-01",
      "name": "[format('webserver{0}', range(1, 2)[copyIndex()])]",
      "location": "[parameters('location')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_B2s"
        },
        "osProfile": {
          "computerName": "[format('webserver{0}', range(1, 2)[copyIndex()])]",
          "adminUsername": "DoNotUse",
          "adminPassword": "SuperSecureP@55w0rd"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2022-datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "webserver1osdisk",
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', 'webserver1nic1')]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": false
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', 'webserver1nic1')]"
      ]
    },
    {
      "copy": {
        "name": "webserverCSE",
        "count": "[length(range(1, 2))]"
      },
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "apiVersion": "2020-12-01",
      "name": "[format('{0}/{1}', format('webserver{0}', range(1, 2)[sub(range(1, 2)[copyIndex()], 1)]), format('webserver{0}-cse', range(1, 2)[copyIndex()]))]",
      "location": "[parameters('location')]",
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.10",
        "autoUpgradeMinorVersion": true,
        "protectedSettings": {
          "fileUris": [
            "https://raw.githubusercontent.com/ACloudGuru-Resources/content-Hands-on-Network-Troubleshooting-with-Azure-Infrastructure-as-a-Service/master/Lab%2002%20-%20Troubleshooting%20Application%20Security%20Groups/Initialize-WebServer.ps1"
          ],
          "commandToExecute": "powershell.exe -ExecutionPolicy Bypass -File Initialize-WebServer.ps1"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines', format('webserver{0}', range(1, 2)[sub(range(1, 2)[copyIndex()], 1)]))]"
      ]
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2021-05-01",
      "name": "appgw1pip",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAddressVersion": "IPv4",
        "publicIPAllocationMethod": "Static",
        "idleTimeoutInMinutes": 4
      }
    },
    {
      "type": "Microsoft.Network/applicationGateways",
      "apiVersion": "2021-05-01",
      "name": "appgw1",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "Standard_v2",
          "tier": "Standard_v2"
        },
        "gatewayIPConfigurations": [
          {
            "name": "appGatewayIpConfig",
            "properties": {
              "subnet": {
                "id": "[reference(resourceId('Microsoft.Network/virtualNetworks', 'vnet1')).subnets[2].id]"
              }
            }
          }
        ],
        "frontendIPConfigurations": [
          {
            "name": "appGwPublicFrontendIp",
            "properties": {
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', 'appgw1pip')]"
              }
            }
          },
          {
            "name": "appGwPrivateFrontendIp",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "10.0.2.80",
              "subnet": "[reference(resourceId('Microsoft.Network/virtualNetworks', 'vnet1')).subnets[2].id]"
            }
          }
        ],
        "frontendPorts": [
          {
            "name": "port_80",
            "properties": {
              "port": 80
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "webServerBackendPool",
            "properties": {}
          }
        ],
        "backendHttpSettingsCollection": [
          {
            "name": "HTTP",
            "properties": {
              "port": 80,
              "protocol": "Http",
              "cookieBasedAffinity": "Disabled",
              "pickHostNameFromBackendAddress": false,
              "requestTimeout": 20
            }
          }
        ],
        "httpListeners": [
          {
            "name": "privateListener",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendIPConfigurations', 'appgw1', 'appGwPrivateFrontendIp')]"
              },
              "frontendPort": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/frontendPorts', 'appgw1', 'port_80')]"
              },
              "protocol": "Http",
              "requireServerNameIndication": false
            }
          }
        ],
        "requestRoutingRules": [
          {
            "name": "RoutePrivateHTTPToBackend",
            "properties": {
              "ruleType": "Basic",
              "httpListener": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/httpListeners', 'appgw1', 'privateListener')]"
              },
              "backendAddressPool": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendAddressPools', 'appgw1', 'webServerBackendPool')]"
              },
              "backendHttpSettings": {
                "id": "[resourceId('Microsoft.Network/applicationGateways/backendHttpSettingsCollection', 'appgw1', 'HTTP')]"
              }
            }
          }
        ],
        "enableHttp2": false,
        "autoscaleConfiguration": {
          "minCapacity": 0,
          "maxCapacity": 10
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', 'appgw1pip')]",
        "[resourceId('Microsoft.Network/virtualNetworks', 'vnet1')]"
      ]
    }
  ],
  "outputs": {
    "vmsWithLogin": {
      "type": "array",
      "value": [
        {
          "name": "jumpbox1",
          "showPrivateIp": false,
          "showPublicIp": true,
          "showFqdn": false
        }
      ]
    }
  }
}